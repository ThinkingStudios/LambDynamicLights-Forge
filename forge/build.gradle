plugins {
    id "com.github.johnrengelman.shadow" version "8.+"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfigs = [
                "ryoamiclights.common.mixins.json", "ryoamiclights.forge.mixins.json"
        ]
    }
}

project.archivesBaseName = rootProject.archivesBaseName + "-forge"

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    modImplementation "maven.modrinth:obsidianui:${rootProject.obsidianui_version}-forge"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set("dev-shadow")
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set(null)
}

jar {
    archiveClassifier.set("dev")
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

publisher {
    apiKeys {
        modrinth System.getenv("MODRINTH_TOKEN")
        curseforge System.getenv("CURSE_TOKEN")
    }

    setCurseID("${rootProject.curseforge_id}")
    setModrinthID("${rootProject.modrinth_id}")
    setVersionType("beta")
    setChangelog(file("CHANGELOG.md").getText("UTF-8"))
    setVersion("${rootProject.version}-forge")
    setDisplayName("[Forge] ${rootProject.version}")
    setGameVersions("1.20", "1.20.1")
    setLoaders("forge")
    setCurseEnvironment("client")
    setArtifact(remapJar)
    addAdditionalFile(sourcesJar)

    modrinthDepends {
        required "obsidianui"
    }

    curseDepends {
        required "obsidianui"
    }
}