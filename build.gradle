plugins {
    id 'dev.architectury.loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
}

group = project.maven_group
version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = project.archives_base_name + "-fabric"

loom {
    forge {
        mixinConfigs = [
                "lambdynlights.mixins.json","lambdynlights.lightsource.mixins.json"
        ]
    }
}

repositories {
    maven {
        name = "AperLambda"
        url = 'https://aperlambda.github.io/maven'
    }
    maven { url "https://maven.architectury.dev/" }
    exclusiveContent {
        forRepository {
            maven {
                name "Modrinth"
                url "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

configurations {
    api.extendsFrom libApi
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"

    modImplementation("me.shedaniel:architectury-forge:${project.architectury_version}")

    modImplementation("maven.modrinth:obsidianui:${project.spruceui_version}")

    libApi("org.aperlambda:lambdajcommon:1.8.1") {
        exclude group: 'com.google.code.gson'
        exclude group: 'com.google.guava'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

processResources {
    inputs.property "version", project.version

    filesMatching('META-INF/mods.toml') {
        expand 'version': project.version
    }
}

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

    withSourcesJar()
}

jar {
    from "../LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {

    }
}
