plugins {
	id 'dev.architectury.loom' version '1.2-SNAPSHOT'
	id 'io.github.juuxel.loom-vineflower' version '1.+'
	id 'java-library'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
	id 'com.modrinth.minotaur' version '2.+'
	id 'com.matthewprenger.cursegradle' version '1.4.+'
}

group = project.maven_group
version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = project.archives_base_name

// This field defines the Java version your mod target.
def targetJavaVersion = 17

loom {
	accessWidenerPath = file("src/main/resources/lambdynlights.accesswidener")

	forge {
		convertAccessWideners = true
		extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

		mixinConfigs = [
				"lambdynlights.mixins.json","lambdynlights.lightsource.mixins.json"
		]
	}
}

repositories {
	maven {
		name "Quilt"
		url "https://maven.quiltmc.org/repository/release"
	}
	exclusiveContent {
		forRepository {
			maven {
				name "Modrinth"
				url "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

configurations {
	shadow
	api.extendsFrom shadow
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "org.quiltmc:quilt-mappings:${project.quilt_mappings}:intermediary-v2"
    forge "net.minecraftforge:forge:${project.forge_version}"

    modImplementation("dev.architectury:architectury-forge:${project.architectury_version}")

	modImplementation include("maven.modrinth:obsidianui:${project.spruceui_version}")

	modImplementation "maven.modrinth:rubidium:${project.sodium_version}"

	implementation 'com.electronwill.night-config:core:3.6.6'
	implementation 'com.electronwill.night-config:toml:3.6.6'
}

java {
	sourceCompatibility = targetCompatibility = JavaVersion.toVersion(targetJavaVersion)

	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'

	it.options.release.set(targetJavaVersion)
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

jar {
	from('LICENSE') {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

